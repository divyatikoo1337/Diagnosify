{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\mp-react\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from \"./components/navbar\";\nimport Home from \"./pages/Home\";\nimport Liver from \"./pages/Liver\";\nimport Info from \"./pages/Info\";\nimport Doctors from \"./pages/Doctors\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // Function to fetch prediction from Flask API\n  const fetchPrediction = async (model, features) => {\n    try {\n      const data = {\n        features: [1, 2, 3, 4, 5] // Example array data\n      };\n      const response = await axios.post(`http://localhost:5000/predict/${model}`, {\n        features: features\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching prediction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/liver-disease-detection\",\n          element: /*#__PURE__*/_jsxDEV(Liver, {\n            fetchPrediction: fetchPrediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/heart-disease-detection\",\n          element: /*#__PURE__*/_jsxDEV(Liver, {\n            fetchPrediction: fetchPrediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/breat-cancer-detection\",\n          element: /*#__PURE__*/_jsxDEV(Liver, {\n            fetchPrediction: fetchPrediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/diabetes-\",\n          element: /*#__PURE__*/_jsxDEV(Liver, {\n            fetchPrediction: fetchPrediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/parkinsons-detection\",\n          element: /*#__PURE__*/_jsxDEV(Liver, {\n            fetchPrediction: fetchPrediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctors-panel\",\n          element: /*#__PURE__*/_jsxDEV(Doctors, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/information\",\n          element: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","Navbar","Home","Liver","Info","Doctors","axios","jsxDEV","_jsxDEV","App","fetchPrediction","model","features","data","response","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/abhis/Desktop/mp-react/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Navbar from \"./components/navbar\";\r\nimport Home from \"./pages/Home\";\r\nimport Liver from \"./pages/Liver\";\r\nimport Info from \"./pages/Info\";\r\nimport Doctors from \"./pages/Doctors\";\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  // Function to fetch prediction from Flask API\r\n  const fetchPrediction = async (model, features) => {\r\n    try {\r\n      const data = {\r\n        features: [1, 2, 3, 4, 5] // Example array data\r\n      };\r\n      const response = await axios.post(`http://localhost:5000/predict/${model}`, {\r\n        features: features\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching prediction:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/liver-disease-detection\" element={<Liver fetchPrediction={fetchPrediction} />} />\r\n          <Route path=\"/heart-disease-detection\" element={<Liver fetchPrediction={fetchPrediction} />} />\r\n          <Route path=\"/breat-cancer-detection\" element={<Liver fetchPrediction={fetchPrediction} />} />\r\n          <Route path=\"/diabetes-\" element={<Liver fetchPrediction={fetchPrediction} />} />\r\n          <Route path=\"/parkinsons-detection\" element={<Liver fetchPrediction={fetchPrediction} />} />\r\n          <Route path=\"/doctors-panel\" element={<Doctors />} />\r\n          <Route path=\"/information\" element={<Info />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}